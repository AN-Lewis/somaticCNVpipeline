========================================================================================================================
========================================================================================================================
========================================================================================================================
SEGMENTING
========================================================================================================================
========================================================================================================================
========================================================================================================================



========================================================================================================================
Purpose
========================================================================================================================

This code performs normalization and segmentation of the bincounts to identify [putative] CNVs
Generates both a lowess.txt file and a segments.txt file for each sample

Normalization
	GC-correction of each sample via lowess regression in 5% sliding windows
	Normalization against an amplification method-specific single-cell reference
		Generated automatically from the input data
		Includes a correction for male/female sample effect on the X/Y chromosome
		Requires at least 10 samples, otherwise only GC-correction is performed
		IF ALL SAMPLES CONTAIN CONSTITUTIVE CNVs, THIS WILL ELIMINATE THEM
			So it can be turned off
	Normalization utilizes the statsmodels python module
		The location of this package must be specified in the config.py file
		If already in your $PYTHONPATH, these lines can be removed from your config.py file
		
Segmentation
	Is performed by circular binary segmentation (CBS)
		https://www.ncbi.nlm.nih.gov/pubmed/15475419
	Is currently only implemented in Matlab, so you must have command line access to that software

As for mapping and counting, all reference files and assumptions about data format are interconnected!!!
	The bin boundaries (varbin) files were generated for 36 bp sequencing reads
		While they don't change dramatically for different read lengths, the do NOT remain the same
	The 25,000 bins which span the genome in these files are equally sized in terms of mapping rate, NOT number of bases
		So splitting or merging them for different resolution will NOT give valid results
	YOU PROCEED AT YOUR OWN RISK IF ANY OF THE REFERENCE FILES ARE ALTERED
	However, all of these references were generated using the strategy outlined here:
		https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5069701/
		So it is possible to create your own references if needed
		Though in this case I still do not guarantee the CNV filtering reference applied later will remain optimal

	
	
========================================================================================================================
Command Line
========================================================================================================================

Get a help message:
	somaticCNVcalling segment -h
	somaticCNVcalling segment --help
	
Options:
	somaticCNVcalling segment [options] /path/to/analysis/directory/ genome
		The analysis directory contains a BinCounts/ folder with the .bincounts.txt files
		Currently genome must be either hg38 or mm10

 	-b/--bincountdir
		A filepath to the containing .bincounts.txt files, if not AnalysisDirectory/BinCounts
	-i/--infofile
		A filepath to a .txt file containing sample-specific information to inform correct normalization
		This file must contain 
			Unique sample name(s), amplification method(s), and number of cells collected for the sample
		(default = assume all samples are from the same amplification method and generated from a single cell)
	-c/--columns
		The location of the columns to import from the infofile, if specified
		Three numbers, zero-indexed
		Order: name column, method column, cell number column
		(default = 0 1 2)
	-g/--gconly
		Set this flag if you want normalization to only perform GC-correction on your samples
		(default = perform GC and method normalization if at least 10 single cell samples are provided)
	-n/--normalizeonly
		Set this flag if you do not want CBS to be performed
		Good for if you do not have Matlab
		(default = perform both correction and CBS)
 	-s/--samples
		A text file containing a list of samples to run processing on
		One file per line, do not include filepaths, but do include the file extension
 			Also no need to include any sort of extension (.sam, .unique.sam.gz, _S5.unique.sam, etc)
			The unique sample name is sufficient (ex dev036)
		(default = process all samples in the directory)



========================================================================================================================
Notes
========================================================================================================================
2/5/2018

	Code for
		Calling the function
		Interpreting command line arguments
	Has been written
	
	Outlined runsegmentation.py code
		Still need to write
	Still need to create code in /segment sub-package
		One for normalize
		One for CBS
	
	Reference files were already uploaded for 
		mm10 and hg38 
		36 bp reads, 25000 bins
		varbin files (both varbin.gc.content and varbin.fullRef)
		chromosome size files
	
	
	
2/6/2018

	Code for
		Performing GC-correction and amplification method normalization
	Has been written
	
	Still need to write CBS segmentation code



2/7/2018
	NOTE
		I made some adjustments to the matlab script so it is more readable in this package
		I think character vectors are indicated using single quotes, so the 'writeMatlabScript' code will create these variables for the 
			lowess bin count file
			segments output file
			bin reference file
			(all absolute filepaths)
		Those lines will be added to the beginning of the code that is in the reference folder
			Then those variables are referenced throughout
		IF THIS DOESN'T WORK
			There is an older version that does which I can adapt from my TSCC scripts


	Code for
		Running CBS segmentation (in Matlab) has been written
	Has been written

	Also updated Semgent config to contain CBS-relevant information
	Created reference file that has sample-independent Matlab/CBS code to improve readability




No testing has been performed yet, there are almost certainly bugs to fix


9/10/2018
	INITIAL DEBUGGING SUCCESSFULLY COMPLETED!
		Confirmed a single sample can run through GC-correction and segmentation
		Also confirmed that multiple samples can go through the single-cell-method normalization
			Though they were all the same sample, so not a full performance test
	!!!Additional testing is still warranted with
		Activating the --output option for custom saving location
		Activating the infofile option for further specification of normalization approach (multiple methods used or some samples are bulk)
			Likewise, activating the columns option with this
		Activating the gconly option to skip method-normalization (with more than 10 samples)
		Activating the normalizeonly option to skip CBS (as if the user wants to run segmentation independently)
		Activating the samples option to run on only a specific subset of samples
		
9/16/2018
	Additional Matlab code debugging performed
		Generated a simpler refernce so converting chromosomes to numbers isn't an issue in the first place
		
